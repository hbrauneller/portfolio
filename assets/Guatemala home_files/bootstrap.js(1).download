

























        






// SCore library bootstrap2 code...
// appId=
(function() {
    var cbs = [],
        uicbs = [],
        scoreLoaded = function() {
            window.Shr.Score.state = state.loaded;
            while(cbs.length) {
                try {cbs.shift()();}
                finally {continue;}
            }
        },
        userInfoLoaded = function(data) {
            Shr.U.status = data.returnCode;        

            Shr.U.id = Shr.U.uid = Shr.U.userId = Shr.U.userName = data.uid;
            Shr.U.email = Shr.U.sflyEmail = data.email || data.memberEmail;
            Shr.U.firstName = data.firstName;
            Shr.U.lastName = data.lastName;
            Shr.U.dn = Shr.U.userDisplayName = Shr.U.displayName = Shr.U.firstName + " " + Shr.U.lastName;
            
            Shr.U.oauthToken = data.oauthToken;
            Shr.U.oauthV2AccessToken = data.oauthV2AccessToken;
            Shr.U.oflyToken = data.oflyToken;
            
            Shr.U.pid = Shr.U.partnerId = data.partnerId;
            Shr.U.psid = Shr.U.partnerSubId = data.partnerSubId;
            Shr.U.puid = Shr.U.partnerUserId = data.partnerUserId;

            Shr.U.visitorId = data.visitorId;
            Shr.U.sflyMember = data.isMember;
            
            Shr.U.migrated = !!data.migrated;
            
            while(uicbs.length) {
                try {uicbs.shift()(Shr.U);}
                finally {continue;}
            }
        },
        state = {
            notLoaded: 0,
            loading: 1,
            loaded: 2
        },
        userStatus = {
            unknown: 0,
            pending: -2,
            signedIn: 1,
            signedOut: -1,
            error: -99
        },
        js;

    window.Shr = window.Shr || {};
    
    window.Shr.Settings = window.Shr.Settings || {
        noRefreshCommand: true
    };
    
    window.Shr.U = window.Shr.U || {};
    window.Shr.U.Status = userStatus;
    window.Shr.U.status = userStatus.unknown
    
    // Where this tag is used, we do not want Share sites to own session!
    window.Shr.U.donotOwnSession = true;

 
    
    window.Shr.UB = window.Shr.UB || {
             name: "OTHER",
         platform: "Linux",
            major: "",
        userAgent: "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/74.0.3729.131 Safari/537.36"
    };
    
    window.Shr.AS = window.Shr.AS || {
                    domain: "shutterfly.com",
                      site: "site.shutterfly.com",
                       cmd: "cmd.shutterfly.com",
                       cmd2: "cmd2.shutterfly.com",
              staticServer: "cdn.staticsfly.com",
             staticServer2: "cdn.staticsfly.com",
                       env: "",
                       www: "www.shutterfly.com",
                       web: "www.shutterfly.com",
                 community: "ws.shutterfly.com",
                       img: "im1.shutterfly.com",
                     media: "media.shutterfly.com",
                     uniim: "uniim1.shutterfly.com",
                       gim: "gim1.shutterfly.com",
                        up: "uniup.shutterfly.com",
                     uniup: "up4.shutterfly.com",
                        ws: "ws.shutterfly.com",
                mailDomain: "sfly.com",
                     video: "s360",
                       api: "api.shutterfly.com",
                disabledDS: "",
          videoHttpBaseUrl: "d23sq69wqfvv5f.cloudfront.net",
        videoStreamBaseUrl: "s2l7lz1oe5m0jf.cloudfront.net",
            mixHttpBaseUrl: "s3s7goqqfk1hjc.cloudfront.net",
          mixStreamBaseUrl: "d27hg30z5i8vu1.cloudfront.net"
    };
    
    window.Shr.Score = window.Shr.Score || {
        version: "377560717",
        src: function() {
            try {
                return window.localStorage.getItem("Shr.Score.src") || "//cdn.staticsfly.com/shr/c/common/score/377560717.js";
            }
            catch(error) {  //potential security violation accessing window.localStorage, caused by disabled cookies
                return "//cdn.staticsfly.com/shr/c/common/score/377560717.js";
            }
        }(),
        trUPP: {
            version: "trupp-20190426-1357-46f0ec24-a99ba02",
            buildVersion: "trupp-20190426-1357-46f0ec24-a99ba02",
            src: function() {
                try {
                    return window.localStorage.getItem("Shr.Score.trUPP.src") || "//cdn.staticsfly.com/trupp/builds/trupp-20190426-1357-46f0ec24-a99ba02/dist/score.js";
                } catch(error) {
                    return "//cdn.staticsfly.com/trupp/builds/trupp-20190426-1357-46f0ec24-a99ba02/dist/score.js";
                }
            }(),
            cookieVersion: "",
            
            enabled: function() {
                var _enabled = true,
                    _disabledDSs = (Shr.AS.disabledDS || "").split(" ").join("").split(","),
                    _trUPPFlipped = _disabledDSs.indexOf("trUPP") != -1,
                    _localSetting;
                try {
                    if (_trUPPFlipped) {
                        _enabled = !_enabled;
                    }
                    
                    _localSetting = window.localStorage.getItem("Shr.Score.trUPP");
                    if (_localSetting != null) {
                        // Use localStorage setting...
                        _enabled = !!_localSetting;
                    }
                } catch(_ex) {
                }
                return _enabled;
            }()
        },
        State: state,
        state: state.notLoaded,
        load: function(cb) {
            var _start = Date.now ? Date.now() : new Date().getTime(),
                _loadComplete = function() {
                    try {
                        // Log time to load score.js...
                        Shr.SflyAjax.sendAjaxRequest({
                            url: ("https://$" + "{0}.shutterfly.com/env/$" + "{1}/metrics").substitute([Shr.AS.getEnv() == "prod" ? "l" : "logsmith.stage", Shr.AS.getEnv()]),
                            method: "POST",
                            contentType: "application/json",
                            args: window.JSON.stringify({
                                metrics: [{
                                    name: [window.Shr.Score.trUPP.enabled ? "trUPP" : "newPP", Shr.Score.version, "score", "load"].join("."),
                                    value: Date.now() - _start,
                                    timestamp: Date.now(),
                                    type: "gauge"
                                }],
                                attributes: {
                                }
                            })
                        }, function(){} );
                    } catch(_ex) {
                    } finally {
                        scoreLoaded();
                    }
                };
            if (window.Shr.Score.state != state.loaded) {
                if (cb) {
                    cbs.push(cb);
                }
                if (window.Shr.Score.state != state.loading) {
                    window.Shr.Score.state = state.loading;
                    js = document.createElement("SCRIPT");
                    js.type = "text/javascript";
                    if (js.readyState) {
                        // IE...
                        js.onreadystatechange = function() {
                            if (js.readyState == "loaded" || js.readyState == "complete") {
                                delete js.onreadystatechange;
                                _loadComplete();
                            }
                        };
                    } else {
                        // not IE...
                        js.onload = function() {
                            delete js.onload;
                            _loadComplete();
                        }
                    }
                    js.src = window.Shr.Score.trUPP.enabled ? window.Shr.Score.trUPP.src : window.Shr.Score.src;
                    document.getElementsByTagName("head")[0].appendChild(js);
                }
            } else if (cb) {
                window.setTimeout(cb, 0);
            }
        },
        getUserInfo: function(cb) {
            var iframe, src, listener, stopListening, onmessage;
            switch (window.Shr.U.status) {
                case window.Shr.U.Status.unknown: {
                    if (cb) {
                        uicbs.push(cb);
                    }
                    
                    listener = function(evt) {
                        evt = evt || window.event;
                        if (iframe.contentWindow == evt.source && src.startsWith(evt.origin)) {
                            stopListening();
                            iframe.parentNode.removeChild(iframe);
                            userInfoLoaded(window.JSON.parse(evt.data));
                        }
                    };
                    
                    if (window.addEventListener) {
                        window.addEventListener("message", listener, false);
                        stopListening = function() {
                            window.removeEventListener("message", listener, false);
                        };
                    } else if (window.attachEvent) {
                        window.attachEvent("onmessage", listener, false);
                        stopListening = function() {
                            window.detachEvent("onmessage", listener, false);
                        };
                    } else {
                        onmessage = window.onmessage;
                        window.onmessage = listener;
                        stopListening = function() {
                            window.onmessage = onmessage;
                        };
                    }
                    iframe = document.createElement("iframe");
                    iframe.style.display = "none";
                    src = iframe.src = ["https:/", Shr.AS.www, "nonVisualSignin", "start.sfly?version=2&outputFormat=postMessage&subdomain=" + document.location.protocol + "//" + document.location.hostname.split(".").slice(0, -2).join(".")].join("/");
                    window.Shr.U.status = window.Shr.U.Status.pending;
                    document.body.appendChild(iframe);
                    break;
                }
                case window.Shr.U.Status.pending: {
                    if (cb) {
                        uicbs.push(cb);
                    }
                    break;
                }
                default: {
                    if (cb) {
                        window.setTimeout(function() {
                            cb(window.Shr.U);
                        }, 0);
                    }
                    break;
                }
            }
        }
    };
    
    window.Shr.SCore = window.Shr.SCore || window.Shr.Score;
})();

